import * as config from "gameconfig.js6";

export class Camera {

  /*
    posX and posY are the world coordinates of the top-left corner of the
    camera viewport.
    cellSize is the size of each world cell in pixels.
  */
  constructor(displayWidth, displayHeight, posX, posY) {
    this._displayWidth = displayWidth;
    this._displayHeight = displayHeight;
    this._posX = posX;
    this._posY = posY;
  }

  set posX(posX) {
    this._posX = posX;
  }

  set posY(posY) {
    this._posY = posY;
  }

  get posX() {
    return this._posX;
  }
  
  get posY() {
    return this._posY;
  }
  
  setPosition(posX, posY) {
    if (posX < 0)
        posX = 0;
    else if (posX > config.worldWidth - this._displayWidth)
        posX = config.worldWidth - this._displayWidth;
    if (posY < 0)
        posY = 0;
    else if (posY > config.worldHeight - this._displayHeight)
        posY = config.worldHeight - this._displayHeight;

    

    this._posX = posX;
    this._posY = posY;
  }
  
  /*
    Returns the index of the first visible column within the camera viewport.
  */
  leftCell() {
    return Math.floor(this._posX / config.cellSize);
  }

  /*
    Returns the index of the last visible column wihtin the camera viewport.
  */
  rightCell() {
    return Math.ceil((this._posX + this._displayWidth) / config.cellSize);
  }

  /*
    Returns the index of the first visible row wihtin the camera viewport.
  */
  topCell() {
    return Math.floor(this._posY / config.cellSize);
  }

  /*
    Returns the index of the last visible row wihtin the camera viewport.
  */
  bottomCell() {
    return Math.ceil((this._posY + this._displayHeight) / config.cellSize);
  }

  /*
    Returns the horizontal pixel offset to apply to tiles in order to achieve
    sub-tile camera positions.
  */
  horizontalOffset() {
    return this._posX % config.cellSize;
  }

  /*
     Returns the vertical pixel offset to apply to tiles in order to achieve
     sub-tile camera positions.
   */
  verticalOffset() {
    return this._posY % config.cellSize;
  }
}

